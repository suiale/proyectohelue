package Unidad6;

import java.util.Objects;

public class Profesor extends Persona {
    private String clave;
    protected double salario;

    public Profesor(String curp, String nombre, String telefono, Fecha nacimiento, String clave) {
        super(curp, nombre, telefono, nacimiento);
        this.clave = clave;
        calcularSalario();
    }

    public Profesor(String curp, String nombre, String telefono, String clave) {
        super(curp, nombre, telefono);
        this.clave = clave;
        calcularSalario();
    }

    public Profesor(String curp, String nombre, String telefono, Fecha fechaNacimiento, String clave, int horas) {
        super(curp, nombre, telefono, fechaNacimiento, clave, horas);
        this.clave = clave;
        calcularSalario();
    }

    // calculate salary
    public void calcularSalario() {
        salario = 0;
    }

    public Profesor() {
        super();
    }

    public Profesor(String nombre, String telefono) {
    }

    public String getClave() {
        return clave;
    }

    public void setClave(String clave) {
        this.clave = clave;
    }


    public double getSalario() {
        return salario;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Profesor that)) return false;
        if (!super.equals(o)) return false;
        return Double.compare(that.getSalario(), getSalario()) == 0 && getClave().equals(that.getClave());
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), getClave(), getSalario());
    }

    @Override
    public String toString() {
        return "Profesor: " + "\n" +
                super.toString() +
                "\nclave: " + clave +
                "\nsalario: " + salario;
    }
}

package Unidad6;

import Unidad6.Fecha;
import Unidad6.Profesor;

import java.util.Objects;

public class ProfesorPorHoras {
    private String curp;
    private String nombre;
    private String telefono;
    private Fecha nacimiento;
    private String clave;

    public ProfesorPorHoras(String curp, String nombre, String telefono, Fecha nacimiento, String clave) {
        this.curp = curp;
        this.nombre = nombre;
        this.telefono = telefono;
        this.nacimiento = nacimiento;
        this.clave = clave;
    }

    // Getters y setters

    public String getCurp() {
        return curp;
    }

    public void setCurp(String curp) {
        this.curp = curp;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public Fecha getNacimiento() {
        return nacimiento;
    }

    public void setNacimiento(Fecha nacimiento) {
        this.nacimiento = nacimiento;
    }

    public String getClave() {
        return clave;
    }

    public void setClave(String clave) {
        this.clave = clave;
    }

    // Otros métodos de la clase
}



package Unidad6;

public class ProfesorTiempoCompleto extends Profesor {
    private double salario;
    private String departamento;
    private int antiguedad;
    private int horas;

    public ProfesorTiempoCompleto(String nombre, String telefono, double salario, String departamento, int antiguedad) {
        super(nombre, telefono);
        this.salario = salario;
        this.departamento = departamento;
        this.antiguedad = antiguedad;
    }

    public  ProfesorTiempoCompleto(String curp, String nombre, String telefono, Fecha nacimiento, String clave) {
        super(curp, nombre, telefono, nacimiento, clave);
        this.getCurp();
        this.getNombre();
        this.getTelefono();
        this.getNacimiento();
        this.getClave();

    }

    public ProfesorTiempoCompleto(String curp, String nombre, String telefono, Fecha fechaNacimiento, String clave, int horas) {
        super(curp, nombre, telefono, fechaNacimiento, clave, horas);
        this.getCurp();
        this.getNombre();
        this.getTelefono();
        this.getNacimiento();
        this.getClave();
        this.getHoras();

    }

    @Override
    public void calcularSalario() {
    }
    public int getHoras() {
        return horas;
    }

    public double getSalario() {
        return salario;
    }

    public String getDepartamento() {
        return departamento;
    }

    public int getAntiguedad() {
        return antiguedad;
    }

}


package Unidad6;
import Unidad5.Ruta;

import java.io.*;
import java.util.*;
import java.util.ArrayList;
import java.util.Scanner;



/*
Resuelva utilizando como base su solución desarrollada para el ejercicio T3y4.1 Jerarquía de clases - Práctica 1 – Persona, de la unidad 3y4. 
En su block de notas, coloque las siguientes líneas en un archivo de texto, cada línea contiene los datos correspondientes a un profesor de tiempo completo 
(curp, nombre, teléfono, fecha de nacimiento y clave) o por horas (curp, nombre, teléfono, fecha de nacimiento, clave y horas) con cada dato separado por una coma:

 * Crear una aplicación en java que tenga:

-	Un método que lea el archivo de texto anterior separe cada dato en una variable del tipo adecuado para poder crear un objeto ProfesorTiempoCompleto o ProfesorPorHoras, según la cantidad de datos en la línea leída del archivo, cree el objeto y guárdelo en un archivo binario de objetos.

-	Un método que lea el archivo binario de objetos y los coloque en un ArrayList de referencias a Persona y regrese el ArrayList<Persona>

-	Un método principal que presente un menú con las opciones:

o	Crear archivo de objetos (llamar al primer método)

o	Leer archivo de objetos (llamar al segundo método)

o	Listar todas las personas

o	Listar el nombre y el teléfono de las personas con un salario menor al indicado por el usuario (ejemplo: 4,200.00)

o	Listar la clave, el nombre y la CURP de las personas que cumplan años en el mes indicado por el usuario (ejemplo: 12).

o	Salir
 */

public class Proyecto {

    //metodo de lectura de archivo de texto

    public static void main(String[] args) throws IOException, FileNotFoundException {
        //bucar archivo de texto


        //leer archivo de texto
        ArrayList<Profesor> lista = new ArrayList<>();
        BufferedReader br = new BufferedReader(new FileReader("text.txt"));
        //procesar archivo
        int contador = 0;

        while (br.ready()){
            String linea = br.readLine();
            if (contador==0){
                String[] nombres = linea.split(",");
            }else{
                String[] datos = linea.split(",");
                if (datos.length==5){
                    lista.add(new ProfesorTiempoCompleto(datos[0], datos[1], datos[2], new Fecha(datos[3]), datos[4]));
                }else if (datos.length==6){
                    lista.add(new ProfesorPorHoras(datos[0], datos[1], datos[2], new Fecha(datos[3]), datos[4], Integer.parseInt(datos[5])));
                }
            }

            contador++;

        }
        br.close();
        //crear una ruta a la carpeta archivos
        String path = new Ruta().getRutaCarpeta("Archivos");
        //crear archivo binario
        File archivo = new File(path, "archivo.dat");

        //guardar en archivo binario
        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("archivo.dat"));
        oos.writeObject(lista);
        oos.close();






    }
    
    
}

MALA841208MMSJNR00,Leandra Anna Malo Alba,(598) 451-5865,08-12-84,C0001
SEGI861208MTSLRN02,Severo Granados Iglesia,(869) 771-1487,12-08-86,C0002,35
LUAA901604MMSNRD07,Lucho Andreu Amat,(246) 245-7306,16-04-90,C0003,20
CABM960212MGRLMR07,Matías Mauricio Castillo Barrera,(707) 933-2513,02-12-96,C0004
GUCM841405MPLRLR02,Mauricio Guijarro Castelló,(612) 325-0216,14-05-84,C0005,41
AVPI870418MNERML05,Isaura Leyre Avilés Pelayo,(992) 564-5230,18-04-87,C0006
MOLS901127MPLRNF09,Soraya Morera-Lago,(651) 544-1246,27-11-90,C0007,51
TACV810306HMSRNN00,Victoriano Tapia-Cabanillas,(851) 782-6044,06-03-81,C0008,57
SACN800428MGRRLR09,Nidia Saez Campoy,(265) 609-6654,28-04-80,C0009
VIMT870104HMSRRR02,Teófila Villanueva Molina,(305) 491-4988,04-01-87,C0010
ALTR901204HMCRNN14,Trini de Alberdi,(561) 649-7485,04-12-90,C0011
BADA771020HMSGMRA0,Dani Baena,(966) 735-9451,20-10-77,C0012,22
ARAN000221MGRGMN09,Angelina de Arregui,(711) 282-2848,21-02-00,C0013
CASA990516MGRGSC08,Samuel de Carranza,(337) 397-0627,16-05-99,C0014,35
MOGJ940313MGRGRC01,Jacinta Montenegro Garcés,(969) 383-4277,13-03-94,C0015
DENL800418MMCGDS03,Lisandro Delgado Nadal,(748) 495-1748,18-04-80,C0016,46
MAGS800303MMSTRL11,Samanta Manjón Godoy,(494) 813-5651,03-03-80,C0017,18
CARA810404MMSLCL06,Albano Teodosio Cañete Rosa,(779) 217-3175,04-04-81,C0018
VIAB880612MMSLGS04,Abel Villanueva,(904) 204-2255,12-06-88,C0019,22
PUCB940121MMSLNL02,Bienvenida Pulido Cózar,(932) 307-3409,21-01-94,C0020
package Unidad6;

import java.util.Objects;

public class Fecha {
    private int dia;
    private int mes;
    private int anio;

    public Fecha(int dia, int mes, int anio) {
        this.dia = dia;
        this.mes = mes;
        this.anio = anio;
    }

    public Fecha(String dato) {
        String[] datos = dato.split("/");
        this.dia = Integer.parseInt(datos[0]);
        this.mes = Integer.parseInt(datos[1]);
        this.anio = Integer.parseInt(datos[2]);
    }

    public int getDia() {
        return dia;
    }

    public void setDia(int dia) {
        this.dia = dia;
    }

    public int getMes() {
        return mes;
    }

    public void setMes(int mes) {
        this.mes = mes;
    }

    public int getAnio() {
        return anio;
    }

    public void setAnio(int anio) {
        this.anio = anio;
    }

    @Override
    public String toString() {
        return "Clases.Fecha: " +
                " \ndia: " + dia +
                " \nmes: " + mes  +
                " \nanio: " + anio;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Fecha fecha)) return false;
        return getDia() == fecha.getDia() && getMes() == fecha.getMes() && getAnio() == fecha.getAnio();
    }

    @Override
    public int hashCode() {
        return Objects.hash(getDia(), getMes(), getAnio());
    }
}

package Unidad6;

import java.util.Objects;

public class Persona {
    private String curp;
    private String nombre;
    private String telefono;
    private Fecha nacimiento;
    private String clave;
    private int horas;

    public Persona(String curp, String nombre, String telefono, Fecha nacimiento) {
        this.curp = curp;
        this.nombre = nombre;
        this.telefono = telefono;
        this.nacimiento = nacimiento;
    }

    public Persona(String curp, String nombre, String telefono) {
        this.curp = curp;
        this.nombre = nombre;
        this.telefono = telefono;
    }

    public Persona() {

    }

    public Persona(String curp, String nombre, String telefono, Fecha fechaNacimiento, String clave, int horas) {
        super ();
        this.curp = curp;
        this.nombre = nombre;
        this.telefono = telefono;
        this.nacimiento = fechaNacimiento;
        this.clave = clave;
        this.horas = horas;
    }

    public String getCurp() {
        return curp;
    }

    public void setCurp(String curp) {
        this.curp = curp;
    }

    public String getTelefono() {
        return telefono;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public Fecha getNacimiento() {
        return nacimiento;
    }

    public void setNacimiento(Fecha nacimiento) {
        this.nacimiento = nacimiento;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Persona persona)) return false;
        return getCurp().equals(persona.getCurp()) && getNombre().equals(persona.getNombre()) && getTelefono().equals(persona.getTelefono()) && getNacimiento().equals(persona.getNacimiento());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCurp(), getNombre(), getTelefono(), getNacimiento());
    }

    @Override
    public String toString() {
        return
                " \ncurp: " + curp +
                " \nnombre: " + nombre +
                " \ntelefono: " + telefono +
                " \nnacimiento: " + nacimiento;
    }
}
